name: Deploy Base Kustomization

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: self-hosted
    env:
      MINIO_HOST: ${{ secrets.MINIO_HOST }}
      MINIO_PORT: ${{ secrets.MINIO_PORT }}
      PGADMIN_HOST: ${{ secrets.PGADMIN_HOST }}
      PGADMIN_PORT: ${{ secrets.PGADMIN_PORT }}
      PLEX_HOST: ${{ secrets.PLEX_HOST }}
      PLEX_PORT: ${{ secrets.PLEX_PORT }}
      PIHOLE_HOST: ${{ secrets.PIHOLE_HOST }}
      PIHOLE_PORT: ${{ secrets.PIHOLE_PORT }}
      PROXMOX_HOST: ${{ secrets.PROXMOX_HOST }}
      PROXMOX_PORT: ${{ secrets.PROXMOX_PORT }}
      AUTH_SERVICE_HOST: ${{ secrets.AUTH_SERVICE_HOST }}
      AUTH_SERVICE_PORT: ${{ secrets.AUTH_SERVICE_PORT }}
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create .env file from secrets
        run: |
          touch /etc/nginx/.env
          echo "MINIO_HOST=${MINIO_HOST}" >> /etc/nginx/.env
          echo "MINIO_PORT=${MINIO_PORT}" >> /etc/nginx/.env
          echo "PGADMIN_HOST=${PGADMIN_HOST}" >> /etc/nginx/.env
          echo "PGADMIN_PORT=${PGADMIN_PORT}" >> /etc/nginx/.env
          echo "PLEX_HOST=${PLEX_HOST}" >> /etc/nginx/.env
          echo "PLEX_PORT=${PLEX_PORT}" >> /etc/nginx/.env
          echo "PIHOLE_HOST=${PIHOLE_HOST}" >> /etc/nginx/.env
          echo "PIHOLE_PORT=${PIHOLE_PORT}" >> /etc/nginx/.env
          echo "PROXMOX_HOST=${PROXMOX_HOST}" >> /etc/nginx/.env
          echo "PROXMOX_PORT=${PROXMOX_PORT}" >> /etc/nginx/.env
          echo "AUTH_SERVICE_HOST=${AUTH_SERVICE_HOST}" >> /etc/nginx/.env
          echo "AUTH_SERVICE_PORT=${AUTH_SERVICE_PORT}" >> /etc/nginx/.env
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          file: ./deploy/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
  deploy-k8s-prod:
    runs-on: self-hosted
    needs: build-and-push
    steps:
    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'
    - name: Create Kubernetes Secret from .env
      run: |
        kubectl create secret generic proxy-secret \
          --from-file=.env=/etc/nginx/.env \
          --dry-run=client -o yaml > deploy/overlays/prod/secret.yaml
    - name: Apply base kustomization
      run: |
        kubectl apply -k deploy/overlays/prod --validate=false
      env:
        KUBECONFIG: ${{ secrets.KUBECONFIG }}
    - name: Rollout deployment
      run: |
        kubectl rollout restart deployment nginx-deployment